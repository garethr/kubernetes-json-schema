{
  "description": "ClusterRoleList is a collection of ClusterRoles", 
  "required": [
    "items"
  ], 
  "x-kubernetes-group-version-kind": [
    {
      "kind": "ClusterRoleList", 
      "version": "v1beta1", 
      "group": "rbac.authorization.k8s.io"
    }
  ], 
  "additionalProperties": false, 
  "$schema": "http://json-schema.org/schema#", 
  "type": "object", 
  "properties": {
    "items": {
      "items": {
        "additionalProperties": false, 
        "type": "object", 
        "x-kubernetes-group-version-kind": [
          {
            "kind": "ClusterRole", 
            "version": "v1beta1", 
            "group": "rbac.authorization.k8s.io"
          }
        ], 
        "description": "ClusterRole is a cluster level, logical grouping of PolicyRules that can be referenced as a unit by a RoleBinding or ClusterRoleBinding.", 
        "properties": {
          "rules": {
            "items": {
              "additionalProperties": false, 
              "required": [
                "verbs"
              ], 
              "type": "object", 
              "description": "PolicyRule holds information that describes a policy rule, but does not contain information about who the rule applies to or which namespace the rule applies to.", 
              "properties": {
                "apiGroups": {
                  "items": {
                    "type": [
                      "string", 
                      "null"
                    ]
                  }, 
                  "type": [
                    "array", 
                    "null"
                  ], 
                  "description": "APIGroups is the name of the APIGroup that contains the resources.  If multiple API groups are specified, any action requested against one of the enumerated resources in any API group will be allowed."
                }, 
                "verbs": {
                  "items": {
                    "type": [
                      "string", 
                      "null"
                    ]
                  }, 
                  "type": "array", 
                  "description": "Verbs is a list of Verbs that apply to ALL the ResourceKinds and AttributeRestrictions contained in this rule.  VerbAll represents all kinds."
                }, 
                "nonResourceURLs": {
                  "items": {
                    "type": [
                      "string", 
                      "null"
                    ]
                  }, 
                  "type": [
                    "array", 
                    "null"
                  ], 
                  "description": "NonResourceURLs is a set of partial urls that a user should have access to.  *s are allowed, but only as the full, final step in the path Since non-resource URLs are not namespaced, this field is only applicable for ClusterRoles referenced from a ClusterRoleBinding. Rules can either apply to API resources (such as \"pods\" or \"secrets\") or non-resource URL paths (such as \"/api\"),  but not both."
                }, 
                "resources": {
                  "items": {
                    "type": [
                      "string", 
                      "null"
                    ]
                  }, 
                  "type": [
                    "array", 
                    "null"
                  ], 
                  "description": "Resources is a list of resources this rule applies to.  '*' represents all resources in the specified apiGroups. '*/foo' represents the subresource 'foo' for all resources in the specified apiGroups."
                }, 
                "resourceNames": {
                  "items": {
                    "type": [
                      "string", 
                      "null"
                    ]
                  }, 
                  "type": [
                    "array", 
                    "null"
                  ], 
                  "description": "ResourceNames is an optional white list of names that the rule applies to.  An empty set means that everything is allowed."
                }
              }
            }, 
            "type": [
              "array", 
              "null"
            ], 
            "description": "Rules holds all the PolicyRules for this ClusterRole"
          }, 
          "kind": {
            "type": [
              "string", 
              "null"
            ], 
            "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
          }, 
          "aggregationRule": {
            "additionalProperties": false, 
            "type": "object", 
            "description": "AggregationRule describes how to locate ClusterRoles to aggregate into the ClusterRole", 
            "properties": {
              "clusterRoleSelectors": {
                "items": {
                  "additionalProperties": false, 
                  "type": "object", 
                  "description": "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.", 
                  "properties": {
                    "matchLabels": {
                      "additionalProperties": {
                        "type": [
                          "string", 
                          "null"
                        ]
                      }, 
                      "type": "object", 
                      "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                    }, 
                    "matchExpressions": {
                      "items": {
                        "additionalProperties": false, 
                        "required": [
                          "key", 
                          "operator"
                        ], 
                        "type": "object", 
                        "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.", 
                        "properties": {
                          "operator": {
                            "type": "string", 
                            "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist."
                          }, 
                          "values": {
                            "items": {
                              "type": [
                                "string", 
                                "null"
                              ]
                            }, 
                            "type": [
                              "array", 
                              "null"
                            ], 
                            "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch."
                          }, 
                          "key": {
                            "x-kubernetes-patch-merge-key": "key", 
                            "type": "string", 
                            "description": "key is the label key that the selector applies to.", 
                            "x-kubernetes-patch-strategy": "merge"
                          }
                        }
                      }, 
                      "type": [
                        "array", 
                        "null"
                      ], 
                      "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed."
                    }
                  }
                }, 
                "type": [
                  "array", 
                  "null"
                ], 
                "description": "ClusterRoleSelectors holds a list of selectors which will be used to find ClusterRoles and create the rules. If any of the selectors match, then the ClusterRole's permissions will be added"
              }
            }
          }, 
          "apiVersion": {
            "type": [
              "string", 
              "null"
            ], 
            "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
          }, 
          "metadata": {
            "additionalProperties": false, 
            "type": "object", 
            "description": "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.", 
            "properties": {
              "ownerReferences": {
                "items": {
                  "additionalProperties": false, 
                  "required": [
                    "apiVersion", 
                    "kind", 
                    "name", 
                    "uid"
                  ], 
                  "type": "object", 
                  "description": "OwnerReference contains enough information to let you identify an owning object. An owning object must be in the same namespace as the dependent, or be cluster-scoped, so there is no namespace field.", 
                  "properties": {
                    "kind": {
                      "type": "string", 
                      "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
                    }, 
                    "uid": {
                      "type": "string", 
                      "description": "UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids"
                    }, 
                    "apiVersion": {
                      "type": "string", 
                      "description": "API version of the referent."
                    }, 
                    "controller": {
                      "type": "boolean", 
                      "description": "If true, this reference points to the managing controller."
                    }, 
                    "blockOwnerDeletion": {
                      "type": "boolean", 
                      "description": "If true, AND if the owner has the \"foregroundDeletion\" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. Defaults to false. To set this field, a user needs \"delete\" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned."
                    }, 
                    "name": {
                      "type": "string", 
                      "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
                    }
                  }
                }, 
                "x-kubernetes-patch-merge-key": "uid", 
                "type": [
                  "array", 
                  "null"
                ], 
                "description": "List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.", 
                "x-kubernetes-patch-strategy": "merge"
              }, 
              "uid": {
                "type": [
                  "string", 
                  "null"
                ], 
                "description": "UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\n\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids"
              }, 
              "deletionTimestamp": {
                "type": [
                  "string", 
                  "null"
                ], 
                "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.", 
                "format": "date-time"
              }, 
              "clusterName": {
                "type": [
                  "string", 
                  "null"
                ], 
                "description": "The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request."
              }, 
              "deletionGracePeriodSeconds": {
                "type": "integer", 
                "description": "Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.", 
                "format": "int64"
              }, 
              "labels": {
                "additionalProperties": {
                  "type": [
                    "string", 
                    "null"
                  ]
                }, 
                "type": "object", 
                "description": "Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels"
              }, 
              "namespace": {
                "type": [
                  "string", 
                  "null"
                ], 
                "description": "Namespace defines the space within each name must be unique. An empty namespace is equivalent to the \"default\" namespace, but \"default\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\n\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces"
              }, 
              "managedFields": {
                "items": {
                  "additionalProperties": false, 
                  "type": "object", 
                  "description": "ManagedFieldsEntry is a workflow-id, a FieldSet and the group version of the resource that the fieldset applies to.", 
                  "properties": {
                    "fieldsV1": {
                      "type": "object", 
                      "description": "FieldsV1 stores a set of fields in a data structure like a Trie, in JSON format.\n\nEach key is either a '.' representing the field itself, and will always map to an empty set, or a string representing a sub-field or item. The string will follow one of these four formats: 'f:<name>', where <name> is the name of a field in a struct, or key in a map 'v:<value>', where <value> is the exact json formatted value of a list item 'i:<index>', where <index> is position of a item in a list 'k:<keys>', where <keys> is a map of  a list item's key fields to their unique values If a key maps to an empty Fields value, the field that key represents is part of the set.\n\nThe exact format is defined in sigs.k8s.io/structured-merge-diff"
                    }, 
                    "apiVersion": {
                      "type": [
                        "string", 
                        "null"
                      ], 
                      "description": "APIVersion defines the version of this resource that this field set applies to. The format is \"group/version\" just like the top-level APIVersion field. It is necessary to track the version of a field set because it cannot be automatically converted."
                    }, 
                    "manager": {
                      "type": [
                        "string", 
                        "null"
                      ], 
                      "description": "Manager is an identifier of the workflow managing these fields."
                    }, 
                    "time": {
                      "type": [
                        "string", 
                        "null"
                      ], 
                      "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.", 
                      "format": "date-time"
                    }, 
                    "operation": {
                      "type": [
                        "string", 
                        "null"
                      ], 
                      "description": "Operation is the type of operation which lead to this ManagedFieldsEntry being created. The only valid values for this field are 'Apply' and 'Update'."
                    }, 
                    "fieldsType": {
                      "type": [
                        "string", 
                        "null"
                      ], 
                      "description": "FieldsType is the discriminator for the different fields format and version. There is currently only one possible value: \"FieldsV1\""
                    }
                  }
                }, 
                "type": [
                  "array", 
                  "null"
                ], 
                "description": "ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn't need to set or understand this field. A workflow can be the user's name, a controller's name, or the name of a specific apply path like \"ci-cd\". The set of fields is always in the version that the workflow used when modifying the object."
              }, 
              "finalizers": {
                "items": {
                  "type": [
                    "string", 
                    "null"
                  ]
                }, 
                "type": [
                  "array", 
                  "null"
                ], 
                "description": "Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed.", 
                "x-kubernetes-patch-strategy": "merge"
              }, 
              "generation": {
                "type": "integer", 
                "description": "A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.", 
                "format": "int64"
              }, 
              "resourceVersion": {
                "type": [
                  "string", 
                  "null"
                ], 
                "description": "An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\n\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency"
              }, 
              "generateName": {
                "type": [
                  "string", 
                  "null"
                ], 
                "description": "GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\n\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\n\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency"
              }, 
              "creationTimestamp": {
                "type": [
                  "string", 
                  "null"
                ], 
                "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.", 
                "format": "date-time"
              }, 
              "annotations": {
                "additionalProperties": {
                  "type": [
                    "string", 
                    "null"
                  ]
                }, 
                "type": "object", 
                "description": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations"
              }, 
              "selfLink": {
                "type": [
                  "string", 
                  "null"
                ], 
                "description": "SelfLink is a URL representing this object. Populated by the system. Read-only.\n\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release."
              }, 
              "name": {
                "type": [
                  "string", 
                  "null"
                ], 
                "description": "Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
              }
            }
          }
        }
      }, 
      "type": [
        "array", 
        "null"
      ], 
      "description": "Items is a list of ClusterRoles"
    }, 
    "kind": {
      "type": [
        "string", 
        "null"
      ], 
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
    }, 
    "apiVersion": {
      "type": [
        "string", 
        "null"
      ], 
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
    }, 
    "metadata": {
      "additionalProperties": false, 
      "type": "object", 
      "description": "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.", 
      "properties": {
        "continue": {
          "type": [
            "string", 
            "null"
          ], 
          "description": "continue may be set if the user set a limit on the number of items returned, and indicates that the server has more data available. The value is opaque and may be used to issue another request to the endpoint that served this list to retrieve the next set of available objects. Continuing a consistent list may not be possible if the server configuration has changed or more than a few minutes have passed. The resourceVersion field returned when using this continue value will be identical to the value in the first response, unless you have received this token from an error message."
        }, 
        "remainingItemCount": {
          "type": "integer", 
          "description": "remainingItemCount is the number of subsequent items in the list which are not included in this list response. If the list request contained label or field selectors, then the number of remaining items is unknown and the field will be left unset and omitted during serialization. If the list is complete (either because it is not chunking or because this is the last chunk), then there are no more remaining items and this field will be left unset and omitted during serialization. Servers older than v1.15 do not set this field. The intended use of the remainingItemCount is *estimating* the size of a collection. Clients should not rely on the remainingItemCount to be set or to be exact.", 
          "format": "int64"
        }, 
        "selfLink": {
          "type": [
            "string", 
            "null"
          ], 
          "description": "selfLink is a URL representing this object. Populated by the system. Read-only.\n\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release."
        }, 
        "resourceVersion": {
          "type": [
            "string", 
            "null"
          ], 
          "description": "String that identifies the server's internal version of this object that can be used by clients to determine when objects have changed. Value must be treated as opaque by clients and passed unmodified back to the server. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency"
        }
      }
    }
  }
}