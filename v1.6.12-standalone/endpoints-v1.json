{
  "description": "Endpoints is a collection of endpoints that implement the actual service. Example:\n  Name: \"mysvc\",\n  Subsets: [\n    {\n      Addresses: [{\"ip\": \"10.10.1.1\"}, {\"ip\": \"10.10.2.2\"}],\n      Ports: [{\"name\": \"a\", \"port\": 8675}, {\"name\": \"b\", \"port\": 309}]\n    },\n    {\n      Addresses: [{\"ip\": \"10.10.3.3\"}],\n      Ports: [{\"name\": \"a\", \"port\": 93}, {\"name\": \"b\", \"port\": 76}]\n    },\n ]", 
  "required": [
    "subsets"
  ], 
  "x-kubernetes-group-version-kind": [
    {
      "Kind": "Endpoints", 
      "Version": "v1", 
      "Group": ""
    }
  ], 
  "$schema": "http://json-schema.org/schema#", 
  "type": "object", 
  "properties": {
    "kind": {
      "type": [
        "string", 
        "null"
      ], 
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
    }, 
    "apiVersion": {
      "type": [
        "string", 
        "null"
      ], 
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
    }, 
    "subsets": {
      "items": {
        "description": "EndpointSubset is a group of addresses with a common set of ports. The expanded set of endpoints is the Cartesian product of Addresses x Ports. For example, given:\n  {\n    Addresses: [{\"ip\": \"10.10.1.1\"}, {\"ip\": \"10.10.2.2\"}],\n    Ports:     [{\"name\": \"a\", \"port\": 8675}, {\"name\": \"b\", \"port\": 309}]\n  }\nThe resulting set of endpoints can be viewed as:\n    a: [ 10.10.1.1:8675, 10.10.2.2:8675 ],\n    b: [ 10.10.1.1:309, 10.10.2.2:309 ]", 
        "properties": {
          "addresses": {
            "items": {
              "required": [
                "ip"
              ], 
              "description": "EndpointAddress is a tuple that describes single IP address.", 
              "properties": {
                "ip": {
                  "type": "string", 
                  "description": "The IP of this endpoint. May not be loopback (127.0.0.0/8), link-local (169.254.0.0/16), or link-local multicast ((224.0.0.0/24). IPv6 is also accepted but not fully supported on all platforms. Also, certain kubernetes components, like kube-proxy, are not IPv6 ready."
                }, 
                "hostname": {
                  "type": [
                    "string", 
                    "null"
                  ], 
                  "description": "The Hostname of this endpoint"
                }, 
                "nodeName": {
                  "type": [
                    "string", 
                    "null"
                  ], 
                  "description": "Optional: Node hosting this endpoint. This can be used to determine endpoints local to a node."
                }, 
                "targetRef": {
                  "description": "ObjectReference contains enough information to let you inspect or modify the referred object.", 
                  "properties": {
                    "kind": {
                      "type": [
                        "string", 
                        "null"
                      ], 
                      "description": "Kind of the referent. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
                    }, 
                    "name": {
                      "type": [
                        "string", 
                        "null"
                      ], 
                      "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
                    }, 
                    "namespace": {
                      "type": [
                        "string", 
                        "null"
                      ], 
                      "description": "Namespace of the referent. More info: http://kubernetes.io/docs/user-guide/namespaces"
                    }, 
                    "apiVersion": {
                      "type": [
                        "string", 
                        "null"
                      ], 
                      "description": "API version of the referent."
                    }, 
                    "fieldPath": {
                      "type": [
                        "string", 
                        "null"
                      ], 
                      "description": "If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered the event) or if no container name is specified \"spec.containers[2]\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object."
                    }, 
                    "resourceVersion": {
                      "type": [
                        "string", 
                        "null"
                      ], 
                      "description": "Specific resourceVersion to which this reference is made, if any. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#concurrency-control-and-consistency"
                    }, 
                    "uid": {
                      "type": [
                        "string", 
                        "null"
                      ], 
                      "description": "UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids"
                    }
                  }
                }
              }
            }, 
            "type": [
              "array", 
              "null"
            ], 
            "description": "IP addresses which offer the related ports that are marked as ready. These endpoints should be considered safe for load balancers and clients to utilize."
          }, 
          "notReadyAddresses": {
            "items": {
              "required": [
                "ip"
              ], 
              "description": "EndpointAddress is a tuple that describes single IP address.", 
              "properties": {
                "ip": {
                  "type": "string", 
                  "description": "The IP of this endpoint. May not be loopback (127.0.0.0/8), link-local (169.254.0.0/16), or link-local multicast ((224.0.0.0/24). IPv6 is also accepted but not fully supported on all platforms. Also, certain kubernetes components, like kube-proxy, are not IPv6 ready."
                }, 
                "hostname": {
                  "type": [
                    "string", 
                    "null"
                  ], 
                  "description": "The Hostname of this endpoint"
                }, 
                "nodeName": {
                  "type": [
                    "string", 
                    "null"
                  ], 
                  "description": "Optional: Node hosting this endpoint. This can be used to determine endpoints local to a node."
                }, 
                "targetRef": {
                  "description": "ObjectReference contains enough information to let you inspect or modify the referred object.", 
                  "properties": {
                    "kind": {
                      "type": [
                        "string", 
                        "null"
                      ], 
                      "description": "Kind of the referent. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
                    }, 
                    "name": {
                      "type": [
                        "string", 
                        "null"
                      ], 
                      "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
                    }, 
                    "namespace": {
                      "type": [
                        "string", 
                        "null"
                      ], 
                      "description": "Namespace of the referent. More info: http://kubernetes.io/docs/user-guide/namespaces"
                    }, 
                    "apiVersion": {
                      "type": [
                        "string", 
                        "null"
                      ], 
                      "description": "API version of the referent."
                    }, 
                    "fieldPath": {
                      "type": [
                        "string", 
                        "null"
                      ], 
                      "description": "If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered the event) or if no container name is specified \"spec.containers[2]\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object."
                    }, 
                    "resourceVersion": {
                      "type": [
                        "string", 
                        "null"
                      ], 
                      "description": "Specific resourceVersion to which this reference is made, if any. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#concurrency-control-and-consistency"
                    }, 
                    "uid": {
                      "type": [
                        "string", 
                        "null"
                      ], 
                      "description": "UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids"
                    }
                  }
                }
              }
            }, 
            "type": [
              "array", 
              "null"
            ], 
            "description": "IP addresses which offer the related ports but are not currently marked as ready because they have not yet finished starting, have recently failed a readiness check, or have recently failed a liveness check."
          }, 
          "ports": {
            "items": {
              "required": [
                "port"
              ], 
              "description": "EndpointPort is a tuple that describes a single port.", 
              "properties": {
                "protocol": {
                  "type": [
                    "string", 
                    "null"
                  ], 
                  "description": "The IP protocol for this port. Must be UDP or TCP. Default is TCP."
                }, 
                "name": {
                  "type": [
                    "string", 
                    "null"
                  ], 
                  "description": "The name of this port (corresponds to ServicePort.Name). Must be a DNS_LABEL. Optional only if one port is defined."
                }, 
                "port": {
                  "type": "integer", 
                  "description": "The port number of the endpoint.", 
                  "format": "int32"
                }
              }
            }, 
            "type": [
              "array", 
              "null"
            ], 
            "description": "Port numbers available on the related IP addresses."
          }
        }
      }, 
      "type": [
        "array", 
        "null"
      ], 
      "description": "The set of all endpoints is the union of all subsets. Addresses are placed into subsets according to the IPs they share. A single address with multiple ports, some of which are ready and some of which are not (because they come from different containers) will result in the address being displayed in different subsets for the different ports. No address will appear in both Addresses and NotReadyAddresses in the same subset. Sets of addresses and ports that comprise a service."
    }, 
    "metadata": {
      "description": "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.", 
      "properties": {
        "name": {
          "type": [
            "string", 
            "null"
          ], 
          "description": "Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
        }, 
        "deletionTimestamp": {
          "type": [
            "string", 
            "null"
          ], 
          "format": "date-time"
        }, 
        "clusterName": {
          "type": [
            "string", 
            "null"
          ], 
          "description": "The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request."
        }, 
        "deletionGracePeriodSeconds": {
          "type": "integer", 
          "description": "Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.", 
          "format": "int64"
        }, 
        "labels": {
          "additionalProperties": {
            "type": [
              "string", 
              "null"
            ]
          }, 
          "type": "object", 
          "description": "Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels"
        }, 
        "namespace": {
          "type": [
            "string", 
            "null"
          ], 
          "description": "Namespace defines the space within each name must be unique. An empty namespace is equivalent to the \"default\" namespace, but \"default\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\n\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces"
        }, 
        "finalizers": {
          "items": {
            "type": [
              "string", 
              "null"
            ]
          }, 
          "type": [
            "array", 
            "null"
          ], 
          "description": "Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed."
        }, 
        "generation": {
          "type": "integer", 
          "description": "A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.", 
          "format": "int64"
        }, 
        "generateName": {
          "type": [
            "string", 
            "null"
          ], 
          "description": "GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\n\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\n\nApplied only if Name is not specified. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#idempotency"
        }, 
        "resourceVersion": {
          "type": [
            "string", 
            "null"
          ], 
          "description": "An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\n\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#concurrency-control-and-consistency"
        }, 
        "ownerReferences": {
          "items": {
            "required": [
              "apiVersion", 
              "kind", 
              "name", 
              "uid"
            ], 
            "description": "OwnerReference contains enough information to let you identify an owning object. Currently, an owning object must be in the same namespace, so there is no namespace field.", 
            "properties": {
              "kind": {
                "type": "string", 
                "description": "Kind of the referent. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
              }, 
              "uid": {
                "type": "string", 
                "description": "UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids"
              }, 
              "apiVersion": {
                "type": "string", 
                "description": "API version of the referent."
              }, 
              "controller": {
                "type": "boolean", 
                "description": "If true, this reference points to the managing controller."
              }, 
              "blockOwnerDeletion": {
                "type": "boolean", 
                "description": "If true, AND if the owner has the \"foregroundDeletion\" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. Defaults to false. To set this field, a user needs \"delete\" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned."
              }, 
              "name": {
                "type": "string", 
                "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
              }
            }
          }, 
          "type": [
            "array", 
            "null"
          ], 
          "description": "List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller."
        }, 
        "creationTimestamp": {
          "type": [
            "string", 
            "null"
          ], 
          "format": "date-time"
        }, 
        "annotations": {
          "additionalProperties": {
            "type": [
              "string", 
              "null"
            ]
          }, 
          "type": "object", 
          "description": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations"
        }, 
        "selfLink": {
          "type": [
            "string", 
            "null"
          ], 
          "description": "SelfLink is a URL representing this object. Populated by the system. Read-only."
        }, 
        "uid": {
          "type": [
            "string", 
            "null"
          ], 
          "description": "UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\n\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids"
        }
      }
    }
  }
}