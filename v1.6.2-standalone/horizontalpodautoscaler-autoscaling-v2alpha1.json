{
  "type": "object", 
  "$schema": "http://json-schema.org/schema#", 
  "x-kubernetes-group-version-kind": [
    {
      "Kind": "HorizontalPodAutoscaler", 
      "Version": "v2alpha1", 
      "Group": "autoscaling"
    }
  ], 
  "description": "HorizontalPodAutoscaler is the configuration for a horizontal pod autoscaler, which automatically manages the replica count of any resource implementing the scale subresource based on the metrics specified.", 
  "properties": {
    "status": {
      "required": [
        "currentReplicas", 
        "desiredReplicas", 
        "currentMetrics"
      ], 
      "description": "HorizontalPodAutoscalerStatus describes the current status of a horizontal pod autoscaler.", 
      "properties": {
        "observedGeneration": {
          "type": "integer", 
          "description": "observedGeneration is the most recent generation observed by this autoscaler.", 
          "format": "int64"
        }, 
        "currentMetrics": {
          "items": {
            "required": [
              "type"
            ], 
            "description": "MetricStatus describes the last-read state of a single metric.", 
            "properties": {
              "pods": {
                "required": [
                  "metricName", 
                  "currentAverageValue"
                ], 
                "description": "PodsMetricStatus indicates the current value of a metric describing each pod in the current scale target (for example, transactions-processed-per-second).", 
                "properties": {
                  "currentAverageValue": {
                    "oneOf": [
                      {
                        "type": [
                          "string", 
                          "null"
                        ]
                      }, 
                      {
                        "type": "integer"
                      }
                    ]
                  }, 
                  "metricName": {
                    "type": "string", 
                    "description": "metricName is the name of the metric in question"
                  }
                }
              }, 
              "object": {
                "required": [
                  "target", 
                  "metricName", 
                  "currentValue"
                ], 
                "description": "ObjectMetricStatus indicates the current value of a metric describing a kubernetes object (for example, hits-per-second on an Ingress object).", 
                "properties": {
                  "currentValue": {
                    "oneOf": [
                      {
                        "type": [
                          "string", 
                          "null"
                        ]
                      }, 
                      {
                        "type": "integer"
                      }
                    ]
                  }, 
                  "target": {
                    "required": [
                      "kind", 
                      "name"
                    ], 
                    "description": "CrossVersionObjectReference contains enough information to let you identify the referred resource.", 
                    "properties": {
                      "kind": {
                        "type": "string", 
                        "description": "Kind of the referent; More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds\""
                      }, 
                      "name": {
                        "type": "string", 
                        "description": "Name of the referent; More info: http://kubernetes.io/docs/user-guide/identifiers#names"
                      }, 
                      "apiVersion": {
                        "type": [
                          "string", 
                          "null"
                        ], 
                        "description": "API version of the referent"
                      }
                    }
                  }, 
                  "metricName": {
                    "type": "string", 
                    "description": "metricName is the name of the metric in question."
                  }
                }
              }, 
              "resource": {
                "required": [
                  "name", 
                  "currentAverageValue"
                ], 
                "description": "ResourceMetricStatus indicates the current value of a resource metric known to Kubernetes, as specified in requests and limits, describing each pod in the current scale target (e.g. CPU or memory).  Such metrics are built in to Kubernetes, and have special scaling options on top of those available to normal per-pod metrics using the \"pods\" source.", 
                "properties": {
                  "currentAverageValue": {
                    "oneOf": [
                      {
                        "type": [
                          "string", 
                          "null"
                        ]
                      }, 
                      {
                        "type": "integer"
                      }
                    ]
                  }, 
                  "currentAverageUtilization": {
                    "type": "integer", 
                    "description": "currentAverageUtilization is the current value of the average of the resource metric across all relevant pods, represented as a percentage of the requested value of the resource for the pods.  It will only be present if `targetAverageValue` was set in the corresponding metric specification.", 
                    "format": "int32"
                  }, 
                  "name": {
                    "type": "string", 
                    "description": "name is the name of the resource in question."
                  }
                }
              }, 
              "type": {
                "type": "string", 
                "description": "type is the type of metric source.  It will match one of the fields below."
              }
            }
          }, 
          "type": "array", 
          "description": "currentMetrics is the last read state of the metrics used by this autoscaler."
        }, 
        "currentReplicas": {
          "type": "integer", 
          "description": "currentReplicas is current number of replicas of pods managed by this autoscaler, as last seen by the autoscaler.", 
          "format": "int32"
        }, 
        "lastScaleTime": {
          "type": [
            "string", 
            "null"
          ], 
          "format": "date-time"
        }, 
        "desiredReplicas": {
          "type": "integer", 
          "description": "desiredReplicas is the desired number of replicas of pods managed by this autoscaler, as last calculated by the autoscaler.", 
          "format": "int32"
        }
      }
    }, 
    "kind": {
      "type": [
        "string", 
        "null"
      ], 
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
    }, 
    "spec": {
      "required": [
        "scaleTargetRef", 
        "maxReplicas"
      ], 
      "description": "HorizontalPodAutoscalerSpec describes the desired functionality of the HorizontalPodAutoscaler.", 
      "properties": {
        "metrics": {
          "items": {
            "required": [
              "type"
            ], 
            "description": "MetricSpec specifies how to scale based on a single metric (only `type` and one other matching field should be set at once).", 
            "properties": {
              "pods": {
                "required": [
                  "metricName", 
                  "targetAverageValue"
                ], 
                "description": "PodsMetricSource indicates how to scale on a metric describing each pod in the current scale target (for example, transactions-processed-per-second). The values will be averaged together before being compared to the target value.", 
                "properties": {
                  "targetAverageValue": {
                    "oneOf": [
                      {
                        "type": [
                          "string", 
                          "null"
                        ]
                      }, 
                      {
                        "type": "integer"
                      }
                    ]
                  }, 
                  "metricName": {
                    "type": "string", 
                    "description": "metricName is the name of the metric in question"
                  }
                }
              }, 
              "object": {
                "required": [
                  "target", 
                  "metricName", 
                  "targetValue"
                ], 
                "description": "ObjectMetricSource indicates how to scale on a metric describing a kubernetes object (for example, hits-per-second on an Ingress object).", 
                "properties": {
                  "targetValue": {
                    "oneOf": [
                      {
                        "type": [
                          "string", 
                          "null"
                        ]
                      }, 
                      {
                        "type": "integer"
                      }
                    ]
                  }, 
                  "target": {
                    "required": [
                      "kind", 
                      "name"
                    ], 
                    "description": "CrossVersionObjectReference contains enough information to let you identify the referred resource.", 
                    "properties": {
                      "kind": {
                        "type": "string", 
                        "description": "Kind of the referent; More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds\""
                      }, 
                      "name": {
                        "type": "string", 
                        "description": "Name of the referent; More info: http://kubernetes.io/docs/user-guide/identifiers#names"
                      }, 
                      "apiVersion": {
                        "type": [
                          "string", 
                          "null"
                        ], 
                        "description": "API version of the referent"
                      }
                    }
                  }, 
                  "metricName": {
                    "type": "string", 
                    "description": "metricName is the name of the metric in question."
                  }
                }
              }, 
              "resource": {
                "required": [
                  "name"
                ], 
                "description": "ResourceMetricSource indicates how to scale on a resource metric known to Kubernetes, as specified in requests and limits, describing each pod in the current scale target (e.g. CPU or memory).  The values will be averaged together before being compared to the target.  Such metrics are built in to Kubernetes, and have special scaling options on top of those available to normal per-pod metrics using the \"pods\" source.  Only one \"target\" type should be set.", 
                "properties": {
                  "targetAverageUtilization": {
                    "type": "integer", 
                    "description": "targetAverageUtilization is the target value of the average of the resource metric across all relevant pods, represented as a percentage of the requested value of the resource for the pods.", 
                    "format": "int32"
                  }, 
                  "name": {
                    "type": "string", 
                    "description": "name is the name of the resource in question."
                  }, 
                  "targetAverageValue": {
                    "oneOf": [
                      {
                        "type": [
                          "string", 
                          "null"
                        ]
                      }, 
                      {
                        "type": "integer"
                      }
                    ]
                  }
                }
              }, 
              "type": {
                "type": "string", 
                "description": "type is the type of metric source.  It should match one of the fields below."
              }
            }
          }, 
          "type": [
            "array", 
            "null"
          ], 
          "description": "metrics contains the specifications for which to use to calculate the desired replica count (the maximum replica count across all metrics will be used).  The desired replica count is calculated multiplying the ratio between the target value and the current value by the current number of pods.  Ergo, metrics used must decrease as the pod count is increased, and vice-versa.  See the individual metric source types for more information about how each type of metric must respond."
        }, 
        "minReplicas": {
          "type": "integer", 
          "description": "minReplicas is the lower limit for the number of replicas to which the autoscaler can scale down. It defaults to 1 pod.", 
          "format": "int32"
        }, 
        "scaleTargetRef": {
          "required": [
            "kind", 
            "name"
          ], 
          "description": "CrossVersionObjectReference contains enough information to let you identify the referred resource.", 
          "properties": {
            "kind": {
              "type": "string", 
              "description": "Kind of the referent; More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds\""
            }, 
            "name": {
              "type": "string", 
              "description": "Name of the referent; More info: http://kubernetes.io/docs/user-guide/identifiers#names"
            }, 
            "apiVersion": {
              "type": [
                "string", 
                "null"
              ], 
              "description": "API version of the referent"
            }
          }
        }, 
        "maxReplicas": {
          "type": "integer", 
          "description": "maxReplicas is the upper limit for the number of replicas to which the autoscaler can scale up. It cannot be less that minReplicas.", 
          "format": "int32"
        }
      }
    }, 
    "apiVersion": {
      "type": [
        "string", 
        "null"
      ], 
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
    }, 
    "metadata": {
      "description": "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.", 
      "properties": {
        "name": {
          "type": [
            "string", 
            "null"
          ], 
          "description": "Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
        }, 
        "deletionTimestamp": {
          "type": [
            "string", 
            "null"
          ], 
          "format": "date-time"
        }, 
        "clusterName": {
          "type": [
            "string", 
            "null"
          ], 
          "description": "The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request."
        }, 
        "deletionGracePeriodSeconds": {
          "type": "integer", 
          "description": "Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.", 
          "format": "int64"
        }, 
        "labels": {
          "additionalProperties": {
            "type": [
              "string", 
              "null"
            ]
          }, 
          "type": "object", 
          "description": "Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels"
        }, 
        "namespace": {
          "type": [
            "string", 
            "null"
          ], 
          "description": "Namespace defines the space within each name must be unique. An empty namespace is equivalent to the \"default\" namespace, but \"default\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\n\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces"
        }, 
        "finalizers": {
          "items": {
            "type": [
              "string", 
              "null"
            ]
          }, 
          "type": [
            "array", 
            "null"
          ], 
          "description": "Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed."
        }, 
        "generation": {
          "type": "integer", 
          "description": "A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.", 
          "format": "int64"
        }, 
        "generateName": {
          "type": [
            "string", 
            "null"
          ], 
          "description": "GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\n\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\n\nApplied only if Name is not specified. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#idempotency"
        }, 
        "resourceVersion": {
          "type": [
            "string", 
            "null"
          ], 
          "description": "An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\n\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#concurrency-control-and-consistency"
        }, 
        "ownerReferences": {
          "items": {
            "required": [
              "apiVersion", 
              "kind", 
              "name", 
              "uid"
            ], 
            "description": "OwnerReference contains enough information to let you identify an owning object. Currently, an owning object must be in the same namespace, so there is no namespace field.", 
            "properties": {
              "kind": {
                "type": "string", 
                "description": "Kind of the referent. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
              }, 
              "uid": {
                "type": "string", 
                "description": "UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids"
              }, 
              "apiVersion": {
                "type": "string", 
                "description": "API version of the referent."
              }, 
              "controller": {
                "type": "boolean", 
                "description": "If true, this reference points to the managing controller."
              }, 
              "blockOwnerDeletion": {
                "type": "boolean", 
                "description": "If true, AND if the owner has the \"foregroundDeletion\" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. Defaults to false. To set this field, a user needs \"delete\" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned."
              }, 
              "name": {
                "type": "string", 
                "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
              }
            }
          }, 
          "type": [
            "array", 
            "null"
          ], 
          "description": "List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller."
        }, 
        "creationTimestamp": {
          "type": [
            "string", 
            "null"
          ], 
          "format": "date-time"
        }, 
        "annotations": {
          "additionalProperties": {
            "type": [
              "string", 
              "null"
            ]
          }, 
          "type": "object", 
          "description": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations"
        }, 
        "selfLink": {
          "type": [
            "string", 
            "null"
          ], 
          "description": "SelfLink is a URL representing this object. Populated by the system. Read-only."
        }, 
        "uid": {
          "type": [
            "string", 
            "null"
          ], 
          "description": "UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\n\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids"
        }
      }
    }
  }
}