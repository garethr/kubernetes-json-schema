{
  "$schema": "http://json-schema.org/schema#", 
  "required": [
    "type"
  ], 
  "type": "object", 
  "description": "MetricSpec specifies how to scale based on a single metric (only `type` and one other matching field should be set at once).", 
  "properties": {
    "resource": {
      "additionalProperties": false, 
      "required": [
        "name"
      ], 
      "description": "ResourceMetricSource indicates how to scale on a resource metric known to Kubernetes, as specified in requests and limits, describing each pod in the current scale target (e.g. CPU or memory).  The values will be averaged together before being compared to the target.  Such metrics are built in to Kubernetes, and have special scaling options on top of those available to normal per-pod metrics using the \"pods\" source.  Only one \"target\" type should be set.", 
      "properties": {
        "targetAverageUtilization": {
          "type": "integer", 
          "description": "targetAverageUtilization is the target value of the average of the resource metric across all relevant pods, represented as a percentage of the requested value of the resource for the pods.", 
          "format": "int32"
        }, 
        "name": {
          "type": "string", 
          "description": "name is the name of the resource in question."
        }, 
        "targetAverageValue": {
          "oneOf": [
            {
              "type": [
                "string", 
                "null"
              ]
            }, 
            {
              "type": "integer"
            }
          ]
        }
      }
    }, 
    "object": {
      "additionalProperties": false, 
      "required": [
        "target", 
        "metricName", 
        "targetValue"
      ], 
      "description": "ObjectMetricSource indicates how to scale on a metric describing a kubernetes object (for example, hits-per-second on an Ingress object).", 
      "properties": {
        "targetValue": {
          "oneOf": [
            {
              "type": [
                "string", 
                "null"
              ]
            }, 
            {
              "type": "integer"
            }
          ]
        }, 
        "target": {
          "additionalProperties": false, 
          "required": [
            "kind", 
            "name"
          ], 
          "description": "CrossVersionObjectReference contains enough information to let you identify the referred resource.", 
          "properties": {
            "kind": {
              "type": "string", 
              "description": "Kind of the referent; More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds\""
            }, 
            "name": {
              "type": "string", 
              "description": "Name of the referent; More info: http://kubernetes.io/docs/user-guide/identifiers#names"
            }, 
            "apiVersion": {
              "type": [
                "string", 
                "null"
              ], 
              "description": "API version of the referent"
            }
          }
        }, 
        "metricName": {
          "type": "string", 
          "description": "metricName is the name of the metric in question."
        }
      }
    }, 
    "pods": {
      "additionalProperties": false, 
      "required": [
        "metricName", 
        "targetAverageValue"
      ], 
      "description": "PodsMetricSource indicates how to scale on a metric describing each pod in the current scale target (for example, transactions-processed-per-second). The values will be averaged together before being compared to the target value.", 
      "properties": {
        "targetAverageValue": {
          "oneOf": [
            {
              "type": [
                "string", 
                "null"
              ]
            }, 
            {
              "type": "integer"
            }
          ]
        }, 
        "metricName": {
          "type": "string", 
          "description": "metricName is the name of the metric in question"
        }
      }
    }, 
    "type": {
      "type": [
        "string", 
        "null"
      ], 
      "description": "type is the type of metric source.  It should match one of the fields below."
    }
  }
}